# docker_compose.yaml
# This is used to run the Elasticsearch container
# It is used to index the podcast transcripts and search for them

version: '3'
services:
  frontend:
    container_name: ${DOCKER_PREFIX:-podcast-search}-frontend
    image: ${DOCKER_PREFIX:-podcast-search}-frontend:latest
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
      - ELASTICSEARCH_USER=${ELASTICSEARCH_USER}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - CHROMADB_HOST=${CHROMADB_HOST}
      - CHROMADB_PORT=${CHROMADB_PORT}
      - LLM_API_KEY=${LLM_API_KEY}
      - LLM_API_BASE=${LLM_API_BASE}
      - LLM_MODEL=${LLM_MODEL}
      - LLM_PROVIDER=${LLM_PROVIDER}
    volumes:
      - ./logs/app:/app/logs
    ports:
      - "127.0.0.1:8008:8008"
    networks:
      - app-network
    deploy:
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: podsearcher
      POSTGRES_PASSWORD: UX9Rghbvu0tBGNUFMqzb
      POSTGRES_DB: rihpodcast
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    environment:
      - DATA_DIR=/data  # Optional: Directory for persistent data
    volumes:
      - chroma-data:/data
    ports:
      - "127.0.0.1:8000:8000"  # ChromaDB default API port
    networks:
      - app-network

volumes:
  esdata:
  pgdata:
  chroma-data:
  app_logs:

networks:
  app-network: